C51 COMPILER V9.59.0.0   LCD1602                                                           08/21/2018 21:17:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source\LCD1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\source) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          
   2          #include <intrins.h>
   3          #include "LCD1602.h"
   4          
   5          unsigned char datas[6] = {0}; //第一位存放正负符号，第二位到第六位存放温度值
   6          
   7          //延时程序仅适用于STC89xxx
   8          void Delay1000ms()              //@11.0592MHz
   9          {
  10   1              unsigned char i, j, k;
  11   1      
  12   1              _nop_();
  13   1              i = 8;
  14   1              j = 1;
  15   1              k = 243;
  16   1              do
  17   1              {
  18   2                      do
  19   2                      {
  20   3                              while (--k);
  21   3                      } while (--j);
  22   2              } while (--i);
  23   1      }
  24          
  25          void Delay10ms()                //@11.0592MHz
  26          {
  27   1              unsigned char i, j;
  28   1      
  29   1              i = 18;
  30   1              j = 235;
  31   1              do
  32   1              {
  33   2                      while (--j);
  34   2              } while (--i);
  35   1      }
  36          
  37          void Delay1ms()         //@11.0592MHz
  38          {
  39   1              unsigned char i, j;
  40   1      
  41   1              _nop_();
  42   1              i = 2;
  43   1              j = 199;
  44   1              do
  45   1              {
  46   2                      while (--j);
  47   2              } while (--i);
  48   1      }
  49          
  50          /*uchar LCD1602_Wait(void)                 //读1602内部状态字 ，查看是否准备好
  51          {
  52                  uchar Sta;
  53                  LcdRs=0;                                   //LcdRS=L,LcdRw=H,LcdEn=H 输出D0~D7状态字
  54                  LcdRw=1;                 
C51 COMPILER V9.59.0.0   LCD1602                                                           08/21/2018 21:17:01 PAGE 2   

  55                  Delay1ms();   
  56                  LcdEn=1;              
  57                  Delay1ms();   
  58                  Sta = LCD1602_Port;      
  59                  Delay1ms();                                                      
  60                  LcdEn=0;
  61                  Sta = Sta & 0x80;
  62                  return Sta;             
  63          }*/
  64          
  65          void LCD1602_Write(bit style, uchar input)
  66          {
  67   1              //while(LCD1602_Wait());                        //若忙碌，则等待,免得显示乱码
  68   1              LcdEn = 0;                                                                                      
  69   1              LcdRs = style;                                          //设置是数据'1',还是命令'0'
  70   1              //LcdRw = 0;              
  71   1              Delay1ms();     
  72   1              LCD1602_Port = input;   
  73   1              Delay1ms();                      
  74   1              LcdEn = 1;               
  75   1              Delay1ms();      
  76   1              LcdEn = 0;                
  77   1             Delay1ms();
  78   1      }
  79          
  80          void LCD1602_Initial()
  81          {
  82   1        LcdRw=0;
  83   1              LcdEn=0;
  84   1              LCD1602_Write(0,0x38);               //8位数据端口,2行显示,5*7点阵
  85   1              LCD1602_Write(0,0x0c);  //开启显示, 无光标
  86   1              LCD1602_Write(0,0x06);       //AC递增, 画面不动
  87   1              LCD1602_Write(0,0x01);   //清屏
  88   1              Delay10ms();
  89   1      }
  90          
  91          void LCD1602_GotoXY(uchar x, uchar y)      //X为显示指针的位置，即为各行的第几个位置，Y选行
  92          {
  93   1              if(x==0)
  94   1                      LCD1602_Write(0,0x80+y);
  95   1              if(x==1)
  96   1                      LCD1602_Write(0,(0x80+0x40+y));
  97   1      }
  98          
  99          void LCD1602_Display_NoXY(uchar *str)                                    //向LCD写入字符串
 100          {
 101   1              while(*str!='\0')
 102   1              {
 103   2                      LCD1602_Write(1,*str);
 104   2                      str++;
 105   2              }
 106   1      }
 107          
 108          
 109          //1602显示温度值
 110          void LcdDisplayTemp(int temp)    //lcd显示
 111          {
 112   1              
 113   1          
 114   1        //unsigned char datas[5] = {0, 0, 0, 0, 0}; //定义数组，存放温度值
 115   1              float tp;  
 116   1              if(temp< 0)                             //当温度值为负数
C51 COMPILER V9.59.0.0   LCD1602                                                           08/21/2018 21:17:01 PAGE 3   

 117   1              {
 118   2                      LCD1602_GotoXY(1,5);
 119   2                  LCD1602_Write(1,'-');               //显示负
 120   2                              datas[0]=0x2d;//把“-”的ASCII码存放在datas[]数组第一位
 121   2                              
 122   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 123   2                      temp=temp-1;
 124   2                      temp=~temp;
 125   2                      tp=temp;
 126   2                      temp=tp*0.0625*100+0.5; 
 127   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 128   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 129   2                      //算由?.5，还是在小数点后面。
 130   2       
 131   2              }
 132   1              else
 133   1              {                       
 134   2                      LCD1602_GotoXY(1,05);
 135   2                  LCD1602_Write(1,'+');               //显示负
 136   2                              datas[0]=0x2b;//把“+”的ASCII码存放在datas[]数组第一位
 137   2                              
 138   2                      tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
 139   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 140   2                      temp=tp*0.0625*100+0.5; 
 141   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 142   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 143   2                      //算加上0.5，还是在小数点后面。
 144   2              }
 145   1              datas[1] = temp / 10000;
 146   1              datas[2] = temp % 10000 / 1000;
 147   1              datas[3] = temp % 1000 / 100;
 148   1              datas[4] = temp % 100 / 10;
 149   1              datas[5] = temp % 10;
 150   1              
 151   1              LCD1602_GotoXY(1,6);
 152   1              LCD1602_Write(1,'0'+datas[1]); //百位   
 153   1              LCD1602_GotoXY(1,7);
 154   1              LCD1602_Write(1,'0'+datas[2]); //十位
 155   1              LCD1602_GotoXY(1,8);
 156   1              LCD1602_Write(1,'0'+datas[3]); //个位 
 157   1              LCD1602_GotoXY(1,9);
 158   1              LCD1602_Write(1,'.');           //显示 ‘.’
 159   1              LCD1602_GotoXY(1,10);
 160   1              LCD1602_Write(1,'0'+datas[4]); //显示小数点后一位
 161   1              LCD1602_GotoXY(1,11);
 162   1              LCD1602_Write(1,'0'+datas[5]); //显示小数点后两位
 163   1              LCD1602_GotoXY(1,12);
 164   1              LCD1602_Write(1,0x43); //显示“C”
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    460    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
